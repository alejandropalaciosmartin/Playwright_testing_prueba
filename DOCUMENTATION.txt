üîµüü¢---------------- DOCUMENTACION PLAYWRIGHT ----------------üîµüü¢

- ¬øQue necesitamos para utilizar Playwright?
    -> npm (node package manager) ‚ùå
    -> Node (execution enviroment) ‚ùå
    -> Visual Studio Code (IDE) ‚ùå
    avascript (programming language) ‚ùå
    -> Playwright (npm package) ‚ùå
    -> Playwright Test for VSCode (plugin) ‚ùåugins de Playwright integrados que nos van a facilitar la vida a la hora de ejecutar tests.
    

Vamos a partir de que no tenemos nada de lo anterior, asi que vamos a ir poco a poco.

1Ô∏è‚É£ -> Primero necesitamos el 'npm'. Para ello nos vamos a la siguiente p√°gina (https://nodejs.org/en/download), descargamos node, y cabe recalcar que el instalador tambi√©n lleva el gestor de paquetes Node.js (npm) dentro de √©l. Esto significa que no necesitas instalar el npm por separado. As√≠ que nos quitamos dos pasos del tir√≥n.

    -> npm (node package manager) ‚úîÔ∏è
    -> Node (execution enviroment) ‚úîÔ∏è

Para comprobar que se ha instalado bien tanto 'npm', como 'node', podemos abrir la consola de comandos y ejecutar 'node -v' y 'npm -v'.

2Ô∏è‚É£ -> Despu√©s, instalamos Visual Studio Code desde el siguiente enlace: https://code.visualstudio.com/download. Tenemos que instalar este IDE y no otro porque m√°s adelante veremos que Visual Studio Code tiene plugins que nos hace mas facil el trabajar con Playwright-> 

    -> Visual Studio Code (IDE) ‚úîÔ∏è

3Ô∏è‚É£ -> El lenguaje Javascript, es el que vamos a utilizar para generar los scripts para los test, asi que no hay que instalar nada, lo que si hay que instalar es el plugin de Playwright en Visual Studio Code. Para ello nos vamos, en VSCode, al apartado de Extensiones (Ctrl+May√∫s+X) y en el buscador ponemos 'Playwright Test for VSCode' y lo instalamos'

    -> Javascript (programming language) ‚úîÔ∏è
    -> Playwright Test for VSCode (plugin) ‚úîÔ∏è

4Ô∏è‚É£ -> Por √∫ltimo, solo nos falta isntalar el paquete de Playwright con npm. Para ello creamos una carpeta en el lugar que deseemos (es la carpeta donde vamos a hacer nuestros scripts), abrimos la carpeta en VSCode (estar√° vac√≠a obviamente) y abrimos una consola de comandos de la carpeta (Ctrl+√ë). Escribimos el siguiente comando (( npm init playwright@latest )). Acontinuaci√≥n, aparecera una serie de pasos:
    ‚ñ∂Ô∏è Primero preguntar√° si queremos proceder a instalar Playwright, le decimos que si (poner una 'y')
    ‚ñ∂Ô∏è En el siguiente paso nos pregunta que lenguaje queremos utilizar, en nuestro caso ponemos TypeScript
    ‚ñ∂Ô∏è En los siguientes pasos: dejamos el nombre por defecto de 'tests', en el siguiente ponemos false y en el ultimo ponemos true (el ultimo paso es para instalar internamente todo los navegadores para no tener problemas al hacer testing)

    -> Playwright (npm package) ‚úîÔ∏è


Ya tenemos todo configurado para poder comenzar!! ü•≥üëå



üîµüü¢---------------- PRIMEROS TESTS CON PLAYWRIGHT ----------------üîµüü¢

‚û°Ô∏è Por defecto nos creas una carpeta llamada tests, con un archivo con dos test muy sencillos (en esa carpeta es donde vamos a escribir nuestros tests) y otra carpeta llamada 'tests-examples' (est√° la vamos a borrar ya que no nos hace falta para nada). 

‚û°Ô∏è Entramos a la carpeta tests y vamos a ver que tiene el archivo 'example.specs.ts'. Como podemos ver tiene dos tests (cada vez que veamos la palabra "test" abriendo parentesis, quiere decir que ah√≠ dentro hay un test). Para ejecutar los tests, abrimos la consola de comandos (Ctrl+√ë) y ejecutamos el siguiente comando -> (( npx playwright test )) (Este comando ejecutara todos los tests que haya en la carpeta tests sin excepci√≥n alguna)

‚úîÔ∏è -> Si sale '6 passed' quiere decir que ha salido todo bien
‚ùå -> Al contrario, si sale algun error, este aparecera en rojo y habra que revisar el codigo

    En cualquiera de los dos casos anteriores, la consola de comandos nos sugiere que ejecutemos el siguiente comando: npx playwright show-report. Este comando es para ver paso a paso lo que ha hecho (en el caso de que tengamos algun error, nos viene de escandalo ya que podemos ver donde hemos fallado)



üîµüü¢---------------- LOCALIZAR ELEMENTOS CON XPATH ---------------- üîµüü¢

-> C√ìDIGO HTML DE EJEMPLO üîΩ
    <html>
        <head>
        </head>
        <body>
            <input type="text" id="name" class="form">
        </body>
    </html>

-> SELECTORES XPATH (ALGUNOS EJEMPLOS) üîΩ
    ‚ñ∂Ô∏è //input[@type='text']
    ‚ñ∂Ô∏è //input[@id='name']
    ‚ñ∂Ô∏è //input[@class='form']